version: '3.8'

services:
  app:
    build:
      context: ./Receiver
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    volumes:
      - ./Receiver:/app/Receiver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./db/servers.json:/pgadmin4/servers.json
    ports:
      - "80:80"
    depends_on:
      - db
  
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  autorizer:
    build:
      context: ./Autorizer
      dockerfile: Dockerfile
    ports:
      - "8003:8080"
    volumes:
      - ./Autorizer:/app/Autorizer
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
  
  notifier:
    build:
      context: ./Notifier
      dockerfile: Dockerfile
    ports:
      - "8002:8080"
    volumes:
      - ./Notifier:/app/Notifier
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
